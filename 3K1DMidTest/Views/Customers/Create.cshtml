@model _3K1DMidTest.Models.Customer

@{
    ViewData["Title"] = "Create";
}

<div class="container">
    <h1 class="mt-4">Create Customer</h1>
    <h4>Customer</h4>
    <hr />
    <div class="row">
        <div class="col-md-6">
            <form id="createForm" asp-action="Create" onsubmit="handleFormSubmit(event)">
                <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

                <div class="mb-3">
                    <label asp-for="Name" class="form-label"></label>
                    <input asp-for="Name" class="form-control" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="BirthDate" class="form-label"></label>
                    <input asp-for="BirthDate" class="form-control" />
                    <span asp-validation-for="BirthDate" class="text-danger"></span>
                </div>

                <div class="form-check mb-3">
                    <input class="form-check-input" asp-for="IsYoungDriver" />
                    <label class="form-check-label" asp-for="IsYoungDriver"></label>
                </div>

                <div class="mb-3">
                    <input type="submit" value="Create" class="btn btn-primary" />
                </div>
            </form>
        </div>
    </div>

    <div>
        <a asp-action="Index" class="btn btn-secondary mt-3">Back to List</a>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        function handleFormSubmit(event) {
            event.preventDefault();
            var form = document.getElementById('createForm');
            if (form.checkValidity()) {
                Swal.fire({
                    title: 'Are you sure?',
                    text: "Do you want to create this customer?",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Yes, create it!',
                    cancelButtonText: 'No, cancel!',
                    reverseButtons: true
                }).then((result) => {
                    if (result.isConfirmed) {
                        form.submit();  // Proceed with form submission
                    } else if (
                        result.dismiss === Swal.DismissReason.cancel
                    ) {
                        Swal.fire(
                            'Cancelled',
                            'The customer was not created',
                            'error'
                        )
                    }
                });
            } else {
                form.reportValidity();
            }
        }
    </script>
}
