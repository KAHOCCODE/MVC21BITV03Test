@model _3K1DMidTest.Models.Part

@{
    ViewData["Title"] = "Create Part";
}

<h2>Create Part</h2>

<form id="createPartForm" asp-action="Create" onsubmit="handlePartFormSubmit(event)">
    <div class="form-group">
        <label asp-for="Name" class="control-label"></label>
        <input asp-for="Name" class="form-control" />
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Price" class="control-label"></label>
        <input asp-for="Price" class="form-control" />
        <span asp-validation-for="Price" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Quantity" class="control-label"></label>
        <input asp-for="Quantity" class="form-control" />
        <span asp-validation-for="Quantity" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="SupplierId" class="control-label"></label>
        <select asp-for="SupplierId" class="form-control" asp-items="ViewBag.SupplierList"></select>
        <span asp-validation-for="SupplierId" class="text-danger"></span>
    </div>
    <div class="form-group">
        <input type="submit" value="Create" class="btn btn-primary" />
    </div>
</form>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        function handlePartFormSubmit(event) {
            event.preventDefault();
            var form = document.getElementById('createPartForm');
            if (form.checkValidity()) {
                Swal.fire({
                    title: 'Are you sure?',
                    text: "Do you want to create this part?",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Yes, create it!',
                    cancelButtonText: 'No, cancel!',
                    reverseButtons: true
                }).then((result) => {
                    if (result.isConfirmed) {
                        form.submit();  
                    } else if (result.dismiss === Swal.DismissReason.cancel) {
                        Swal.fire(
                            'Cancelled',
                            'The part was not created',
                            'error'
                        );
                    }
                });
            } else {
                form.reportValidity();
            }
        }
    </script>
}